generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model RecuperacaoSenha {
  id        Int      @id @default(autoincrement())
  usuarioId Int
  codigo    String   @db.VarChar(6)
  expira    DateTime
  usado     Boolean  @default(false)
  criadoEm  DateTime @default(now()) @map("criado_em")
  usuario   usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId], map: "recuperacao_senha_usuarioId_fkey")
  @@map("recuperacao_senha")
}

model Categoria {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  servicos Servico[]

  @@map("categoria")
}

model Servico {
  id               Int           @id @default(autoincrement())
  id_contratante   Int
  id_prestador     Int?
  id_categoria     Int?
  descricao        String
  status           StatusServico @default(PENDENTE)
  data_solicitacao DateTime      @default(now())
  data_conclusao   DateTime?
  data_confirmacao DateTime?
  id_localizacao   Int?
  valor            Decimal?      @db.Decimal(10, 2)
  pagamentos       Pagamento[]
  categoria        Categoria?    @relation(fields: [id_categoria], references: [id])
  contratante      contratante   @relation(fields: [id_contratante], references: [id])
  localizacao      Localizacao?  @relation(fields: [id_localizacao], references: [id])
  prestador        prestador?    @relation(fields: [id_prestador], references: [id])

  @@index([id_categoria], map: "servico_id_categoria_fkey")
  @@index([id_contratante], map: "servico_id_contratante_fkey")
  @@index([id_localizacao], map: "servico_id_localizacao_fkey")
  @@index([id_prestador], map: "servico_id_prestador_fkey")
  @@map("servico")
}

model Avaliacao {
  id             Int       @id @default(autoincrement())
  id_servico     Int       @unique(map: "id_servico")
  id_contratante Int
  id_prestador   Int
  nota           Int
  comentario     String?   @db.Text
  data_avaliacao DateTime? @default(now()) @db.DateTime(0)

  @@index([id_contratante])
  @@index([id_prestador])
  @@map("avaliacao")
}

model Pagamento {
  id             Int             @id @default(autoincrement())
  id_servico     Int
  id_contratante Int
  id_prestador   Int
  valor          Decimal         @db.Decimal(10, 2)
  metodo         MetodoPagamento @default(CARTEIRA_PAGBANK)
  status         StatusPagamento @default(PENDENTE)
  id_pagbank     String?
  data_pagamento DateTime        @default(now())
  contratante    contratante     @relation(fields: [id_contratante], references: [id])
  prestador      prestador       @relation(fields: [id_prestador], references: [id])
  servico        Servico         @relation(fields: [id_servico], references: [id])

  @@index([id_contratante], map: "pagamento_id_contratante_fkey")
  @@index([id_prestador], map: "pagamento_id_prestador_fkey")
  @@index([id_servico], map: "pagamento_id_servico_fkey")
  @@map("pagamento")
}

model Carteira {
  id            Int                 @id @default(autoincrement())
  id_usuario    Int                 @unique
  chave_pagbank String
  saldo         Decimal             @default(0.00) @db.Decimal(10, 2)
  data_criacao  DateTime            @default(now())
  usuario       usuario             @relation(fields: [id_usuario], references: [id])
  transacoes    TransacaoCarteira[]

  @@map("carteira")
}

model TransacaoCarteira {
  id             Int           @id @default(autoincrement())
  id_carteira    Int
  tipo           TipoTransacao
  valor          Decimal       @db.Decimal(10, 2)
  descricao      String?
  data_transacao DateTime      @default(now())
  carteira       Carteira      @relation(fields: [id_carteira], references: [id])

  @@index([id_carteira], map: "transacao_carteira_id_carteira_fkey")
  @@map("transacao_carteira")
}

model Localizacao {
  id          Int           @id @default(autoincrement())
  logradouro  String
  numero      String?
  bairro      String
  cidade      String
  cep         String?
  latitude    Decimal
  longitude   Decimal
  contratante contratante[]
  servicos    Servico[]
  prestador   prestador[]   @relation("localizacaotoprestador")

  @@map("localizacao")
}

model contratante {
  id             Int                      @id @default(autoincrement())
  necessidade    contratante_necessidade?
  id_usuario     Int                      @unique(map: "Contratante_id_usuario_key")
  id_localizacao Int
  cpf            String?                  @unique(map: "Contratante_cpf_key")
  localizacao    Localizacao              @relation(fields: [id_localizacao], references: [id], map: "Contratante_id_localizacao_fkey")
  usuario        usuario                  @relation(fields: [id_usuario], references: [id], map: "Contratante_id_usuario_fkey")
  pagamento      Pagamento[]
  servico        Servico[]

  @@index([id_localizacao], map: "Contratante_id_localizacao_fkey")
}

model documento {
  id             Int                      @id @default(autoincrement())
  tipo_documento documento_tipo_documento
  valor          String
  data_validade  DateTime?
  arquivo_url    String?
  id_prestador   Int
  prestador      prestador                @relation(fields: [id_prestador], references: [id], map: "Documento_id_prestador_fkey")

  @@index([id_prestador], map: "Documento_id_prestador_fkey")
}

model prestador {
  id          Int           @id @default(autoincrement())
  id_usuario  Int           @unique(map: "Prestador_id_usuario_key")
  documento   documento[]
  pagamento   Pagamento[]
  usuario     usuario       @relation(fields: [id_usuario], references: [id], map: "Prestador_id_usuario_fkey")
  servico     Servico[]
  localizacao Localizacao[] @relation("localizacaotoprestador")

  @@index([id_usuario], map: "Prestador_id_usuario_idx")
}

model usuario {
  id           Int                 @id @default(autoincrement())
  nome         String
  senha_hash   String
  email        String              @unique(map: "Usuario_email_key")
  telefone     String              @unique(map: "Usuario_telefone_key")
  tipo_conta   usuario_tipo_conta?
  criado_em    DateTime            @default(now())
  carteira     Carteira?
  contratante  contratante?
  prestador    prestador?
  recuperacoes RecuperacaoSenha[]
}

enum StatusServico {
  PENDENTE
  EM_ANDAMENTO
  FINALIZADO
  CANCELADO
}

enum MetodoPagamento {
  CARTEIRA_PAGBANK
  PIX
  CARTAO
}

enum StatusPagamento {
  PENDENTE
  PAGO
  FALHOU
  CANCELADO
}

enum TipoTransacao {
  ENTRADA
  SAIDA
}

enum documento_tipo_documento {
  RG
  CPF
  CNH_EAR
  TIPO_VEICULO
  MODELO_VEICULO
  ANO_VEICULO
}

enum contratante_necessidade {
  IDOSO
  DEF_VISUAL
  DEF_AUDITIVA
  DEF_MOTORA
  DEF_INTELECTUAL
}

enum usuario_tipo_conta {
  CONTRATANTE
  PRESTADOR
}
